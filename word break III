def wordBreak3(self, s, dict):
        # Write your code here
        dp_table_bool, dp_table_num = [False for i in range(len(s)+1)], [0 for i in range(len(s)+1)]
        #dp_table_bool stores result if substring[:i] is wordbreakable from dict;dp_table_num stores number of ways to break
        
        dp_table_bool[0], dp_table_num[0] = True, 1 #initial states
        maxlen = self.getmaxlen(dict)
        temp = set()
        for word in dict:
            temp.add(word.lower())
            temp.add(word)
        dict = temp
        s = s.lower()
        for i in range(1, len(s)+1):
            for j in range(min(maxlen, i)+1):
                if dp_table_bool[i-j] == True and s[i-j:i] in dict:
                    dp_table_bool[i] = True
                    dp_table_num[i] += dp_table_num[i-j]
        return dp_table_num[-1]
